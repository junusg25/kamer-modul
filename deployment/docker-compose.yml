version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: kamerba-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: repairshop
      POSTGRES_USER: repairshop_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-change_this_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    ports:
      - "5432:5432"
    networks:
      - kamerba-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U repairshop_user -d repairshop"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (Optional - for caching)
  redis:
    image: redis:7-alpine
    container_name: kamerba-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kamerba-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Backend Application
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kamerba-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: repairshop
      DB_USER: repairshop_user
      DB_PASSWORD: ${DB_PASSWORD:-change_this_password}
      JWT_SECRET: ${JWT_SECRET:-change_this_secret}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-change_this_secret_too}
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - kamerba-network
    volumes:
      - ./backend/uploads:/app/uploads
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: kamerba-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./frontend/dist:/usr/share/nginx/html/frontend:ro
      - ./customer-portal/dist:/usr/share/nginx/html/portal:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro  # For SSL certificates
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - backend
    networks:
      - kamerba-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  kamerba-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

